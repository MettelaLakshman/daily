class Solution{
public:
    int prime(int n)
    {
        for(int i=2;i<=sqrt(n);i++)
        {
            if(n%i==0)return 0;
        }
        return 1;
    }
    vector<int> orderedPrime(int n){
        // code here
        int x=n;
        vector<int>vt(n,0);
        vector<int>ans;
        for(int i=2;i<=n/2;i++)
        {
            if(prime(i))
            {
                ans.push_back(i);
            }
        }
        vector<int>k;
        int i=0,f=1,c=0;
        while(1)
        {
            if(i==ans.size())break;
            if(n%ans[i]==0)
            {
                n=n/ans[i];
                c++;
            }
            else
            {
                i++;
                f*=(c+1);
                if(c!=0)
                {
                    k.push_back(c);
                }
                c=0;
            }
        }
        vector<int>ll;
        f*=(c+1);
        sort(k.begin(),k.end());
        k.push_back(f);
        if(x==1 || x==0)
        {
            return {1};
        }
        else if(prime(x))
        {
            ll.push_back(1);
            ll.push_back(2);
            return ll;
        }
        return k;
    }
};
