void helper(TreeNode *root1,vector<int>&vt)
    {
        if(root1==NULL)return;
        helper(root1->left,vt);
        if(root1->left==NULL && root1->right==NULL)
        {
            vt.push_back(root1->val);
        }
        helper(root1->right,vt);
    }
    void helper1(TreeNode *root2,vector<int>&vt1)
    {
        if(root2==NULL)return;
        helper(root2->left,vt1);
        if(root2->left==NULL && root2->right==NULL)
        {
            vt1.push_back(root2->val);
        }
        helper1(root2->right,vt1);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int>vt;
        vector<int>vt1;
        helper(root1,vt);
        helper1(root2,vt1);
        if(vt.size()!=vt1.size())return 0;
        else
        {
            for(int i=0;i<vt.size();i++)
            {
                if(vt[i]!=vt1[i])
                {
                    return 0;
                }
            }
            return 1;
        }
    }
